
#!/usr/bin/env python3
"""
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –±—ã—Å—Ç—Ä–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ ESP32
–¢–æ–ª—å–∫–æ —Å–∞–º—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —à–∞–≥–∏ –±–µ–∑ –∏–∑–±—ã—Ç–æ—á–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫
"""

import os
import sys
import subprocess
import argparse

def main():
    parser = argparse.ArgumentParser(description='–ë—ã—Å—Ç—Ä–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ ESP32')
    parser.add_argument('--port', '-p', help='COM –ø–æ—Ä—Ç ESP32')
    parser.add_argument('--skip-fs', action='store_true', help='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ñ–∞–π–ª–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É')
    
    args = parser.parse_args()
    
    print("‚ö° –ë—ã—Å—Ç—Ä–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ ESP32")
    print("=" * 30)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
    if not os.path.exists("platformio.ini"):
        print("‚ùå –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏ ESP32 –ø—Ä–æ–µ–∫—Ç–∞")
        sys.exit(1)
    
    # –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    commands = [
        ("pio run", "–°–±–æ—Ä–∫–∞ –ø—Ä–æ—à–∏–≤–∫–∏"),
    ]
    
    if not args.skip_fs:
        commands.append(("pio run --target buildfs", "–°–±–æ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã"))
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ —Å–±–æ—Ä–∫–∏
    for cmd, desc in commands:
        print(f"\nüîÑ {desc}...")
        result = subprocess.run(cmd, shell=True)
        if result.returncode != 0:
            print(f"‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: {desc} –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –∫–æ–¥–æ–º {result.returncode}")
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—à–∏–≤–∫–∏
    upload_cmd = "pio run --target upload"
    if args.port:
        upload_cmd += f" --upload-port {args.port}"
    
    print(f"\nüì§ –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—à–∏–≤–∫–∏...")
    print("üí° –ó–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É BOOT –Ω–∞ ESP32 –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ")
    
    result = subprocess.run(upload_cmd, shell=True)
    if result.returncode == 0:
        print("‚úÖ –ü—Ä–æ—à–∏–≤–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—à–∏–≤–∫–∏ (–∫–æ–¥: {result.returncode})")
        sys.exit(1)
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
    if not args.skip_fs:
        uploadfs_cmd = "pio run --target uploadfs"
        if args.port:
            uploadfs_cmd += f" --upload-port {args.port}"
        
        print(f"\nüíæ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã...")
        result = subprocess.run(uploadfs_cmd, shell=True)
        if result.returncode == 0:
            print("‚úÖ –§–∞–π–ª–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        else:
            print(f"‚ö†Ô∏è  –§–∞–π–ª–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ (–∫–æ–¥: {result.returncode})")
    
    print("\nüéâ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("üìã –ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ WiFi: 'ESP32_ChargingStations'")
    print("üåê –û—Ç–∫—Ä–æ–π—Ç–µ: http://192.168.4.1")

if __name__ == "__main__":
    main()
